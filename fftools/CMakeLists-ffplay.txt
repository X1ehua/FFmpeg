cmake_minimum_required(VERSION 3.20)
project(ffplay)

include_directories( .. /usr/local/include/SDL2)
file(GLOB HEADERS ../libavutil/*.h ../libavcodec/*.h ../libavformat/*.h)

add_executable(ffplay cmdutils.c ffplay.c ${HEADERS})

find_library(util     NAMES avutil     HINTS "${CMAKE_CURRENT_SOURCE_DIR}/../libavutil")
find_library(codec    NAMES avcodec    HINTS "${CMAKE_CURRENT_SOURCE_DIR}/../libavcodec")
find_library(format   NAMES avformat   HINTS "${CMAKE_CURRENT_SOURCE_DIR}/../libavformat")
find_library(scale    NAMES swscale    HINTS "${CMAKE_CURRENT_SOURCE_DIR}/../libswscale")
find_library(resample NAMES swresample HINTS "${CMAKE_CURRENT_SOURCE_DIR}/../libswresample")

find_library(libz    z)
find_library(libcurl curl)
find_library(libSDL  SDL2)
find_library(CoreFoundation CoreFoundation)

if (CONFIG_AVFILTER) # --enable-filters
	find_library(CoreGraphics CoreGraphics)
	find_library(OpenGL OpenGL)
	find_library(AppKit AppKit)
	find_library(CoreImage CoreImage)
	find_library(CoreText CoreText)
    message(">>> xxx")
endif()

message(">> libsdl: ${libsdl}, CONFIG_AVFILTER: ${CONFIG_AVFILTER}")

target_link_libraries(ffplay
    ${codec} ${format} ${filter} ${util} ${resample} ${scale}
    ${libz} ${libcurl} ${libSDL} ${CoreFoundation}
#   ${CoreGraphics} ${OpenGL} ${AppKit} ${CoreImage} ${CoreText}
)

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror=format")
